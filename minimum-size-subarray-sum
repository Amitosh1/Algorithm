/** https://leetcode.com/problems/minimum-size-subarray-sum/
 * @param {number} s
 * @param {number[]} nums
 * @return {number}
 */
var minSubArrayLen = function(s, nums) {
    let left = 0
      , right = 1
      , length = 1
      , sum = nums[0]
      , smallest = Infinity
      , increment_right = true;
    if (sum >= s) {
        return 1
    }else if(nums.length<1){
        return 0
    }

    while (true) {
        if (increment_right) {
            if(nums[right]>=s){
                smallest=1;
                break;
            }
            sum += nums[right];
            length++;
        } else {
            sum -= nums[left++];
            length--;
        }
        if (sum >= s) {
            smallest = Math.min(smallest, length);
            if (length === 1) {
                smallest = 1;
                break;
            }
            increment_right = false;
        } else {
            right++;
            increment_right = true;
            if (right === nums.length)
                break;
            //length++;
        }
    }
    return smallest === Infinity ? 0 : smallest;
};
